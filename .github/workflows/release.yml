name: Release

on:
  push:
    tags: 
      - 'v*.*.*'  # Triggers on version tags like v1.2.3

env:
  CARGO_TERM_COLOR: always
  
jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            target-name: win32-x64
            exe-name: moos-ivp-language-server.exe
          - os: windows-latest
            target: i686-pc-windows-msvc
            target-name: win32-i686
            exe-name: moos-ivp-language-server.exe
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            target-name: linux-x64
            exe-name: moos-ivp-language-server
          - os: macos-12
            target: x86_64-apple-darwin
            target-name: darwin-x64
            exe-name: moos-ivp-language-server
          - os: macos-12
            target: aarch64-apple-darwin
            target-name: darwin-arm64
            exe-name: moos-ivp-language-server

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Repostiory
      uses: actions/checkout@v4
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Install Rust toolchain
      run: |
        rustup update --no-self-update stable
        rustup target add ${{ matrix.target }}
        rustup component add rust-src

    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Copy Executable to VS Code Extension
      run: cp target/${{ matrix.target }}/release/${{ matrix.exe-name }} editors/vscode/server/
    - name: Compress application
      run: |
        tar -zcf moos-ivp-language-server-${{ matrix.target-name }}.tar.gz ${{ matrix.exe-name }}
        echo "ZIP_NAME=moos-ivp-language-server-${{ matrix.target-name }}.tar.gz" >> $GITHUB_ENV
      if: ${{ ! endsWith(matrix.exe-name, '.exe') }}
      working-directory: target/${{ matrix.target }}/release
    - name: Compress application
      run: |
        7z a moos-ivp-language-server-${{ matrix.target-name }}.7z ${{ matrix.exe-name }}
        echo "ZIP_NAME=moos-ivp-language-server-${{ matrix.target-name }}.7z" >> $env:GITHUB_ENV
      if: ${{ endsWith(matrix.exe-name, '.exe') }}
      working-directory: target/${{ matrix.target }}/release
    - name: Upload Language Server
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.ZIP_NAME}}
        path: |
          target/${{ matrix.target }}/release/${{env.ZIP_NAME}}
          !target/${{ matrix.target }}/release/moos-ivp-language-server.d
        compression-level: 9
        if-no-files-found: error
    - name: Build VS Code Extension
      run: npm install && npm run compile
      working-directory: editors/vscode
    - name: Package VS Code Extension
      run: npx @vscode/vsce package --out moos-ivp-editor-${{ matrix.target-name }}.vsix --target ${{ matrix.target-name }}
      working-directory: editors/vscode
    - name: Upload VS Code Extension
      uses: actions/upload-artifact@v4
      with:
        name: moos-ivp-editor-${{ matrix.target-name }}.vsix
        path: editors/vscode/moos-ivp-editor-${{ matrix.target-name }}.vsix
        compression-level: 0
        if-no-files-found: error
        
  publish:
    # TODO: This should get updated to only run on tags. Inverting for testing.
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    needs: ["build"]
    permissions:
      contents: write  
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: moos-ivp-language-server-win32-x64.7z
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: moos-ivp-editor-win32-x64.vsix
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: moos-ivp-language-server-win32-i686.7z
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: moos-ivp-editor-win32-i686.vsix
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: moos-ivp-language-server-linux-x64.tar.gz
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: moos-ivp-editor-linux-x64.vsix
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: moos-ivp-language-server-darwin-x64.tar.gz
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: moos-ivp-editor-darwin-x64.vsix
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: moos-ivp-language-server-darwin-arm64.tar.gz
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: moos-ivp-editor-darwin-arm64.vsix
          path: dist
      - name: List files
        run: ls -al dist/*
      # Extract the tag version, removing the "refs/tags/" prefix
      - name: Get the version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          body: WARNING! This is just a test release for setting up CI/CD.
          prerelease: true
          files: |
            LICENSE
            dist/*
